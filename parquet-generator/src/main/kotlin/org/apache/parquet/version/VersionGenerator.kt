/*
 * Copyright (c) The Apache Software Foundation.
 * Copyright (c) GAHOJIN, Inc.
 *
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.parquet.version

import com.squareup.kotlinpoet.FileSpec
import com.squareup.kotlinpoet.FunSpec
import com.squareup.kotlinpoet.KModifier
import com.squareup.kotlinpoet.ParameterSpec
import com.squareup.kotlinpoet.PropertySpec
import com.squareup.kotlinpoet.STRING
import com.squareup.kotlinpoet.TypeSpec
import com.squareup.kotlinpoet.jvm.jvmStatic
import java.io.IOException
import java.util.*
import kotlin.io.path.Path

object VersionGenerator {
    private const val PACKAGE_NAME = "org.apache.parquet"
    private const val CLASS_NAME: String = "Version"

    fun main(args: Array<String>) {
        val basePath = Path(args[0])

        val props = VersionGenerator::class.java.getResourceAsStream("/parquet-version.properties")?.use {
            Properties().apply { load(it) }
        } ?: throw IOException("/parquet-version.properties not found")

        val versionClass = TypeSpec.objectBuilder(CLASS_NAME)
            .addModifiers(KModifier.PUBLIC)
            .addProperty(PropertySpec.builder("VERSION_NUMBER", String::class)
                .addModifiers(KModifier.PUBLIC, KModifier.CONST)
                .initializer("%S", props.getProperty("versionNumber"))
                .build())
            .addProperty(PropertySpec.builder("FULL_VERSION", String::class)
                .addModifiers(KModifier.PUBLIC, KModifier.CONST)
                .initializer("%S", props.getProperty("fullVersion"))
                .build())
            .addFunction(FunSpec.builder("main")
                .jvmStatic()
                .addModifiers(KModifier.PUBLIC)
                .addParameter(ParameterSpec.builder("args", STRING, KModifier.VARARG)
                    .build())
                .addStatement("println(FULL_VERSION)")
                .build())
            .build()

        val schemaFile = FileSpec.builder(PACKAGE_NAME, CLASS_NAME)
            .addFileComment("This class is auto-generated by ${PACKAGE_NAME}.${CLASS_NAME}\nDo not manually edit!")
            .addType(versionClass)
            .build()

        schemaFile.writeTo(basePath)
    }
}
